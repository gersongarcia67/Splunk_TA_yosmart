[YoSmart THSensor]
description = YoSmart THSensor base search
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = TA_yosmart
request.ui_dispatch_view = search
search = index=yosmart sourcetype=yosmart_thsensor_status | rename data.deviceId as deviceId \
| rename data.state.battery as battery \
| rename data.state.humidity as humidity \
| rename data.state.temperature as temperature_celsius\
| eval temperature_fahrenheit=(tonumber(temperature_celsius)*1.8)+32 \
| lookup yosmart_devices.csv deviceId OUTPUT name type modelname\
| stats avg(temperature_celsius),avg(temperature_fahrenheit),avg(humidity),avg(battery) by deviceId,name,type,modelname

[Create yosmart_devices.csv]
description = Search to create KV for YoSmart devices. The APP inputs.conf collects the data ever 24h.
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=yosmart sourcetype=yosmart_device_list code="000000" earliest=-36h\
| spath | rename data.devices{}.deviceId as deviceId data.devices{}.name as name data.devices{}.modelName as modelname data.devices{}.type as type\
| eval x=mvzip(deviceId,mvzip(name,modelname)) \
| eval x1=mvzip(x,type)\
| mvexpand x1 | eval x = split(x1,",") | eval deviceId=mvindex(x,0) | eval name=mvindex(x,1) | eval modelname=mvindex(x,2) | eval type=mvindex(x,3)\
| eval modelname=mvindex(x,2) | table deviceId name modelname type\
| dedup deviceId name modelname type \
| outputlookup yosmart_devices.csv override_if_empty=false
